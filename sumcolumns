#!/usr/bin/env python

# a quick command-line program for adding up numbers across columns

# Author: David McClosky
# Homepage: http://zorglish.org
# Code: http://code.zorglish.org

from __future__ import division
import sys, re, optparse
from waterworks.Strings import try_parse_float
from AIMA import vector_add

parser = optparse.OptionParser()
parser.add_option('-t', '--table', action='store_true',
    help='Show parsed data as a table (for sanity checking)')
parser.add_option('-c', '--cumulative', action='store_true',
    help='Show cumulative percentiles')
parser.add_option('-p', '--percentages', action='store_true',
    help='Show non-cumulative percentages')
opts, args = parser.parse_args()

not_numbers_re = re.compile('[^0-9\.]')
def cleanup(cell):
    numbers_only = not_numbers_re.sub('', cell)
    return try_parse_float(numbers_only, 0)

lines = sys.stdin.readlines()
totals = None
if opts.table:
    import texttable
    table = texttable.Texttable()
    table.set_deco(table.BORDER)
    rows = []

for line in lines:
    row = [cleanup(cell) for cell in line.split()]
    if opts.table:
        rows.append(row)
    if totals is None:
        totals = row
    else:
        assert len(row) == len(totals)
        totals = vector_add(totals, row)

if opts.table:
    table.set_cols_align(['r'] * len(totals))
    rows.append(['---'] * len(totals))
    rows.append(totals)
    table.add_rows(rows)
    print table.draw()

if opts.cumulative:
    cumulative_total = None
    print '--- Cumulative totals ---'
    for line in lines:
        row = [cleanup(cell) for cell in line.split()]
        if cumulative_total is None:
            cumulative_total = row
        else:
            cumulative_total = vector_add(cumulative_total, row)

        cumulative = ["%.1f%%" % (100 * i / j)
            for i, j in zip(cumulative_total, totals)
            if j != 0]
        print line.rstrip(), '|', ' '.join(cumulative)
    print '---'
elif opts.percentages:
    print '--- Percentages ---'
    for line in lines:
        row = [cleanup(cell) for cell in line.split()]
        percentages = ["%.1f%%" % (100 * i / j)
            for i, j in zip(row, totals)
            if j != 0]
        print line.rstrip(), '|', ' '.join(percentages)
    print '---'

print 'Total(s):', ' '.join(str(total) for total in totals if total > 0)
